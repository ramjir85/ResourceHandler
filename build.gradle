apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'

sourceCompatibility = '1.7'
targetCompatibility = '1.7'



mainClassName = 'resourcescheduler.ResourceScheduler'

jar {
    manifest {
        attributes 'Main-Class': 'resourcescheduler.ResourceScheduler'
    }
}

repositories {
    mavenCentral();
   }

dependencies {

    compile 'com.jayway.awaitility:awaitility:1.6.2',
            'org.assertj:assertj-core:1.0.0'


    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile 'junit:junit-dep:4.11', 'com.jayway.restassured:rest-assured:2.4.0'
}

/*

sourceSets {
    test {
        java {
            srcDirs = ['src/test/service', 'src/test/unit']
        }
        resources {
            srcDirs = ['config']
        }
    }

    unitTest {
        compileClasspath = sourceSets.main.output + configurations.testRuntime
        runtimeClasspath = output + sourceSets.main.output + configurations.testRuntime
        java {
            srcDirs = ['src/test/unit']
        }
        resources {
            srcDirs = ['config']
        }
    }

    functionalTest {
        compileClasspath = sourceSets.main.output + configurations.testRuntime
        runtimeClasspath = output + sourceSets.main.output + configurations.testRuntime
        java {
            srcDirs = ['src/test/service']
        }
        resources {
            srcDirs = ['config']
        }
    }
}

task unitTest(type: Test) {
    testClassesDir = sourceSets.unitTest.output.classesDir
    classpath = sourceSets.unitTest.runtimeClasspath
}

task functionalTest(type: Test) {
    testClassesDir = sourceSets.functionalTest.output.classesDir
    classpath = sourceSets.functionalTest.runtimeClasspath
}

run {
    args 'server', 'config/template-service.yml'
}*/
